---
trigger:
  batch: true
  branches:
    include:
      - main
pr:
  branches:
    include:
      - "*"

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: artifactFeed
  value: 'Socrates-Cloud/Socrates-Cloud'
- name: buildArtifactName
  value: 'clinical'
- name: buildMetadataName
  value: 'build-metadata'  
- name: sonarQubeServiceConnection
  value: 'Specsavers IT - SonarQube - Prod'
- name: acrServiceConnection
  value: 'ACR - Corp - Non-Prod - Docker'
- name: packageName
  value: java-clinical_microservice
resources:
  repositories:
    - repository: templates
      type: git
      name: DevOpsEngineering/azure-pipeline_templates
      ref: refs/tags/10.19.0
    - repository: local_templates
      type: git
      name: Socrates-Cloud/azure-pipeline_templates
      ref:  feat/SC-966-test-build

jobs:
  - template: 'jobs/versioning/conventional-commit.yml@templates'
  - template: "jobs/maven/maven-ci.yml@templates"
    parameters:
      jobName: mavenBuild
      dependsOn: [ GitVersion]
      sonarServiceConnection: $(sonarQubeServiceConnection)
      buildGoals: test
      effectivePomSkip: true      
      runComponentTest: false
      componentGoals: verify
      artifactVersion: $[dependencies.GitVersion.outputs['setVersion.semVer']]
      authenticationFeeds:
        - ${{ variables.artifactFeed }}
      publishToFeed: true
      gitTag: true
      logToDeliveryDb: false
      customPreSteps: []
      customPostSteps:
        - script: |
            mkdir -p $(build.artifactStagingDirectory)/$(buildMetadataName)
            echo $(jq -n --arg version "$(version)" '{version: $version}') > $(build.artifactStagingDirectory)/$(buildMetadataName)/metadata.json
          displayName: Create Build Metadata
        - publish: $(Build.ArtifactStagingDirectory)/$(buildMetadataName)
          artifact: $(buildMetadataName)
        - script: |
            mv ./target/*.jar $(Build.ArtifactStagingDirectory)
            ls -la $(Build.ArtifactStagingDirectory)
          displayName: Stage Jar Files
        - publish: $(Build.ArtifactStagingDirectory)
          artifact: ${{ variables.buildArtifactName }} 
  - template: 'jobs/docker/docker-ci.yml@templates'
    parameters:
      variables: 
        packageVersion: $[dependencies.GitVersion.outputs['setVersion.semVer']]
      customPreSteps: # 'Include any custom pre steps i.e pull an artifact before building the Dockerfile. Default: []'
      - download: current
        artifact: ${{ variables.buildArtifactName }}
      - script: |
          cp $(Pipeline.Workspace)/clinical/*.jar .
          pwd
          ls -la
        displayName: Copy Jar
      - script: |
          contents="$(jq '.version="$(packageVersion)" | .appVersion="$(packageVersion)"' metadata.json)" && \
          echo "${contents}" > metadata.json
        displayName: Update metadata.json with versions
        name: MetadataVersion
      dependsOn: [GitVersion, mavenBuild]
      dockerFile: ./Dockerfile
      gitTag: true # 'A Boolean to determine if a this job should tag the git repository. Default: true'
      logToDeliveryDb: true # 'Boolean to log the image to the delivery database. Default: true'
      publishBranches: 
        - 'refs/heads/main' # 'The list of branches that are allowed to publish the artifact. Default: refs/heads/master'
      dockerBuildArgs: |
        --build-arg CLINICAL_VERSION=$(packageVersion)
  - template: 'jobs/versioning/dynamic-branch-publish.yml@templates'
    parameters:
      terraformRepo: 'git://Socrates-Cloud/terraform-socrates_cloud'
      versionName: java_clinical_microservice_artifact_version
      dependsOn: [GitVersion, mavenBuild, dockerCI]
  - template: 'jobs/versioning/component-publish.yml@templates'
    parameters:
      terraformRepo: 'git://Socrates-Cloud/terraform-socrates_cloud'
      versionName: java_clinical_microservice_artifact_version
      dependsOn: [GitVersion, mavenBuild, dockerCI]
  - template: 'jobs/versioning/build-comment-docker.yml@local_templates'     